fn main ( ) { u32 a = 0 ; }

fn -> defining function
main -> name of function
( ) -> find the parentheses and save what's inside them for later use
		Looking for '{'
{ -> the start to the function
u32 -> we are defining a variable
a -> variable name
		looking for a [length] signifing a list or = signifing single variable
= -> variable asignment
0 -> assignment value
; -> end of variable assignment
} -> the end of the function


fns [ name: "main", id: 1, lines: [2,4] ]
vars [ name: "a", id: 0, const: 1, type: 1, const_value: 0, used: 0 ]


fn main()
{
	u32 input = 0;
}

// compile calculation example
// RULES
	// - Only non const values are allowed.
	// - Decleration of functions is not allowed inside runtime calcs.
	// - The compiling will show "Running compile time calc. inside function main |/-\" (loading sign).
	// - The code of a runtime calc. is put right into memory on a seperate thread to then be executed.
	// - Returning a value calls a function that some how stores that value in a register or place in memory that isn't used.
fn main()
{
	@{rtc;
	u32 a = 3;
	for (int i=0;i<2;i++)
	{
		a += 2;
	}
	return a;
	@rtc};
	// Which evaluates to
	return 7;
}
